package com.bigjelly.shaddockvideoplayer.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bigjelly.shaddockvideoplayer.model.VideoFile;
import com.bigjelly.shaddockvideoplayer.model.AudioInfo;
import com.bigjelly.shaddockvideoplayer.model.VideoInfo;

import com.bigjelly.shaddockvideoplayer.greendao.VideoFileDao;
import com.bigjelly.shaddockvideoplayer.greendao.AudioInfoDao;
import com.bigjelly.shaddockvideoplayer.greendao.VideoInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig videoFileDaoConfig;
    private final DaoConfig audioInfoDaoConfig;
    private final DaoConfig videoInfoDaoConfig;

    private final VideoFileDao videoFileDao;
    private final AudioInfoDao audioInfoDao;
    private final VideoInfoDao videoInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        videoFileDaoConfig = daoConfigMap.get(VideoFileDao.class).clone();
        videoFileDaoConfig.initIdentityScope(type);

        audioInfoDaoConfig = daoConfigMap.get(AudioInfoDao.class).clone();
        audioInfoDaoConfig.initIdentityScope(type);

        videoInfoDaoConfig = daoConfigMap.get(VideoInfoDao.class).clone();
        videoInfoDaoConfig.initIdentityScope(type);

        videoFileDao = new VideoFileDao(videoFileDaoConfig, this);
        audioInfoDao = new AudioInfoDao(audioInfoDaoConfig, this);
        videoInfoDao = new VideoInfoDao(videoInfoDaoConfig, this);

        registerDao(VideoFile.class, videoFileDao);
        registerDao(AudioInfo.class, audioInfoDao);
        registerDao(VideoInfo.class, videoInfoDao);
    }
    
    public void clear() {
        videoFileDaoConfig.clearIdentityScope();
        audioInfoDaoConfig.clearIdentityScope();
        videoInfoDaoConfig.clearIdentityScope();
    }

    public VideoFileDao getVideoFileDao() {
        return videoFileDao;
    }

    public AudioInfoDao getAudioInfoDao() {
        return audioInfoDao;
    }

    public VideoInfoDao getVideoInfoDao() {
        return videoInfoDao;
    }

}
